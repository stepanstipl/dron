box:
  id: golang:1.8-alpine
  cmd: /bin/sh
build:
  steps:
    - script:
        name: build
        code: ci/build.sh
push-github:
  steps:
    - script:
        name: restore release tag
        code: |
          export MY_RELEASE_TAG=$(cat $WERCKER_ROOT/.release_tag) && \
          echo "Release tag: ${MY_RELEASE_TAG}" && \
          tar zcvf "dron-linux-amd64.tar.gz" "${WERCKER_ROOT}/dron" && \
          apk add --update curl jq openssl
    - stepanstipl/github-create-release:
        token: $GITHUB_TOKEN
        tag: $MY_RELEASE_TAG
    - stepanstipl/github-upload-asset:
        token: $GITHUB_TOKEN
        file: dron-linux-amd64.tar.gz
        content_type: application/x-gzip
push-quay:
  steps:
    - script:
        name: restore release tag
        code: |
          export MY_RELEASE_TAG="v$(cat $WERCKER_ROOT/.release_tag)" && \
          echo "Release tag: ${MY_RELEASE_TAG}"
    - internal/docker-scratch-push:
        username: $QUAY_USERNAME
        password: $QUAY_TOKEN
        tag:  latest $MY_RELEASE_TAG $WERCKER_GIT_COMMIT
        repository: quay.io/stepanstipl/dron
        registry: https://quay.io
        author: Stepan Stipl
        cmd: /dron
